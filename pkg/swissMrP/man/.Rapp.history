sd <- function(x, ...) UseMethod("sd")#
## take the usual definition of sd,#
## and set it to be the default method#
sd.default <- stats::sd#
## create a method for our class "foo"#
sd.foo = function(x, ...) print("Hi")
formals(sd.default) <- c(formals(sd.default), alist(... = ))
args(sd.default)
args(stats::sd)
bar <- 1:10#
sd(bar)
class(bar) <- "foo"#
sd(bar)
help(sd)
library(pscl)
help(plot.pscl)
help(pscl)
help(ideal)
help(plot.rollcall)
help(ideal)
summary.ideal
help(summary.ideal)
methods(plot)
methods(summary)
print#
function (x, ...)#
UseMethod("print")
a.1 <- 3.1415926#
class(a.1) <- "my.1"#
a.2 <- 6.1415926#
class(a.2) <- "my.2"
my.fcn <- function(x){#
  UseMethod("my.usefcn", x)#
}
my.fcn(12)
my.usefcn.my.1 <- function(x){#
  x + 1#
}
my.usefcn.my.2 <- function(x){#
  x + 2#
}
First call#
my.fcn(a.1)#
my.fcn(a.2)#
a.1#
a.2
my.fcn(a.2)
a.1#
a.2
print.my.1 <- function(x, digits = 3){#
  print(unclass(x), digits = digits)#
}
print.my.2 <- function(x, digits = 6){#
  print(unclass(x), digits = digits)#
}
my.fcn(a.1)
my.fcn(a.2)
print(a.1)
print(a.2)
rm(list=ls())
a.1 <- 3.1415926#
class(a.1) <- "my.1"
my.usefcn.my.1 <- function(x){#
  x + 1#
}
my.fcn(a.1)
my.fcn <- function(x){#
  UseMethod("my.usefcn", x)#
}
my.fcn(a.1)
